{"version":3,"sources":["other-js/modal.js"],"names":["modal","document","getElementById","addEventListener","event","buttonPressed","relatedTarget","console","log","projectID","projectTitle","getAttribute","replace","toUpperCase","projectLiveDemoLink","projectGithubLink","modelButtonLiveDemo","querySelector","modelButtonGithub","href","modalProjectTechnologies","modalProjectDescription","Object","currentProjectSelected","id","entries","projectContent","key","value","description","textContent","luxuryRealEstateCompany","name","technology","liveDemo","repo","sassLandingPage"],"mappings":";AA8CA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,KAAA,oBAAA,QAAA,EAAA,OAAA,WAAA,EAAA,cAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EA9CA,IAAIA,EAAQC,SAASC,eAAe,SAEpCF,EAAMG,iBAAiB,gBAAiB,SAAUC,GAE5CC,IAAAA,EAAgBD,EAAME,cAC1BC,QAAQC,IAAIH,GAIRI,IACAC,EADYL,EAAcM,aAAa,MACdC,QAAQ,KAAM,KAAKC,cAChDN,QAAQC,IAAIE,GAGRI,IAAAA,EAAsBT,EAAcM,aAAa,qBACrDJ,QAAQC,IAAIM,GAERC,IAAAA,EAAoBV,EAAcM,aAAa,kBACnDJ,QAAQC,IAAIO,GAGNC,IAAAA,EAAsBf,SAASgB,cACnC,8BAEIC,EAAoBjB,SAASgB,cAAc,2BAGjDD,EAAoBG,KAAOL,EAC3BI,EAAkBC,KAAOJ,EAEMf,EAAMiB,cAArC,uBAAIG,IACAC,EAA0BrB,EAAMiB,cAApC,sBAEAV,QAAQC,IAAIa,GAIeC,IAFvBC,IAAAA,EAAyBlB,EAAcmB,GAEhBF,EAAAA,EAAAA,EAAAA,OAAOG,QAAQC,GAAiB,EAAA,EAAA,OAAA,IAAA,CAAtD,IAAA,EAAA,EAAA,EAAA,GAAA,GAAOC,EAAP,EAAA,GAAYC,EAAZ,EAAA,GACCL,GAAAA,IAA2BI,EAAK,CAE9BE,IAAAA,EAAcD,EAAMC,YACxBR,EAAwBS,YAAcD,MAK5C,IAAMH,EAAiB,CACrBK,wBAAyB,CACvBC,KAAM,6BACNH,YACE,uHACFI,WAAY,wCACZC,SAAU,qDACVC,KAAM,sDAERC,gBAAiB,CACfJ,KAAM,iCACNH,YACE,oHACFI,WAAY,wCACZC,SAAU,mDACVC,KAAM","file":"modal.f033afdd.js","sourceRoot":"..","sourcesContent":["let modal = document.getElementById(\"modal\");\n\nmodal.addEventListener(\"show.bs.modal\", function (event) {\n  // ? Button that triggered the modal\n  let buttonPressed = event.relatedTarget;\n  console.log(buttonPressed);\n\n  //! Extracting info from data-bs-* attributes\n  //? GETTING PROJECT TITLE FROM BUTTON PRESSED AND DISPLAYING IT IN MODAL\n  let projectID = buttonPressed.getAttribute(\"id\");\n  let projectTitle = projectID.replace(/-/g, \" \").toUpperCase();\n  console.log(projectTitle);\n\n  //? GETTING THE A HREF LINK FROM THE BUTTON PRESSED ELEMENT (PROJECT)\n  let projectLiveDemoLink = buttonPressed.getAttribute(\"data-bs-live-demo\");\n  console.log(projectLiveDemoLink);\n\n  let projectGithubLink = buttonPressed.getAttribute(\"data-bs-github\");\n  console.log(projectGithubLink);\n\n  //? SELECTING BUTTONS AND ELEMENTS INSIDE MODAL\n  const modelButtonLiveDemo = document.querySelector(\n    \"#live-demo-button-in-modal\"\n  );\n  const modelButtonGithub = document.querySelector(\"#github-button-in-modal\");\n\n  //* ASSIGNING BUTTON PRESSED A HREF LINK TO THE SHARED LIVE DEMO BUTTON AND GITHUB BUTTON IN MODAL\n  modelButtonLiveDemo.href = projectLiveDemoLink;\n  modelButtonGithub.href = projectGithubLink;\n\n  let modalProjectTechnologies = modal.querySelector(`#modal-technologies`);\n  let modalProjectDescription = modal.querySelector(`#modal-description`);\n\n  console.log(modalProjectDescription);\n\n  let currentProjectSelected = buttonPressed.id;\n\n  for (const [key, value] of Object.entries(projectContent)) {\n    if (currentProjectSelected === key) {\n      //? setting description\n      let description = value.description;\n      modalProjectDescription.textContent = description;\n    }\n  }\n});\n\nconst projectContent = {\n  luxuryRealEstateCompany: {\n    name: \"luxury real estate company\",\n    description:\n      \"json objects is just like accessing nested arrays. Nested objects are the objects that are inside an another object.\",\n    technology: \"<strong>HTML | CSS GRID ONLY</strong>\",\n    liveDemo: \"https://realtor-landing-page-css-grid.netlify.app/\",\n    repo: \"https://github.com/AyoCodess/CSS-Grid-Landing-Page\",\n  },\n  sassLandingPage: {\n    name: \"SASS Hero Section Landing Page\",\n    description:\n      \"In the following example 'vehicles' is a object which is inside a main object called 'person'. Using dot notation\",\n    technology: \"<strong>HTML | CSS GRID ONLY</strong>\",\n    liveDemo: \"https://sass-landing-page-ayocodess.netlify.app/\",\n    repo: \"https://github.com/AyoCodess/Sass-Landing-Page\",\n  },\n};\n"]}